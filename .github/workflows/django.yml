name: Django CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # ===================
  # âœ… CI - Test Job
  # ===================
  build:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test_db
          MYSQL_USER: test_user
          MYSQL_PASSWORD: test_pass
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    strategy:
      max-parallel: 4
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pylint

      - name: Wait for DB
        run: |
          until mysqladmin ping -h127.0.0.1 -uroot -proot --silent; do
            echo "Waiting for database connection..."
            sleep 5
          done

      - name: Run Pylint
        run: pylint **/*.py

      - name: Run Tests
        working-directory: ./todoapp
        env:
          DB_NAME: test_db
          DB_USER: test_user
          DB_PASSWORD: test_pass
          DB_HOST: 127.0.0.1
        run: python manage.py test

  # ===================
  # ðŸš€ CD - Deploy Job
  # ===================
  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.11"

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Deploy to AWS EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ${{ secrets.AWS_EC2_USER }}
          key: ${{ secrets.AWS_EC2_KEY }}
          script: |
            cd /home/ubuntu/todoapp
            git pull origin main
            source venv/bin/activate
            pip install -r requirements.txt
            export DB_NAME=${{ secrets.PROD_DB_NAME }}
            export DB_USER=${{ secrets.PROD_DB_USER }}
            export DB_PASSWORD=${{ secrets.PROD_DB_PASSWORD }}
            export DB_HOST=${{ secrets.PROD_DB_HOST }}
            python manage.py migrate --noinput
            sudo systemctl restart gunicorn
            sudo systemctl restart nginx
