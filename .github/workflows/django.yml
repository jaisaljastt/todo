name: Django CI/CD

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: todo
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8

      - name: Lint code
        run: |
          cd todoapp
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

      - name: Run migrations
        run: |
          cd todoapp
          python manage.py migrate --settings=config.django.test
        env:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          DJANGO_ENV: test
          DEBUG: "False"

      - name: Run tests
        run: |
          cd todoapp
          python manage.py test --settings=config.django.test
        env:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          DJANGO_ENV: test
          DEBUG: "False"

      - name: Check security issues
        run: |
          cd todoapp
          python manage.py check --deploy --settings=config.django.test
        env:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          DJANGO_ENV: test
          DEBUG: "False"

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v3

      - name: Build Docker image
        run: |
          docker build --no-cache -t todo-app .

      - name: Test Docker image
        run: |
          docker run --rm -e SECRET_KEY=${{ secrets.SECRET_KEY }} -e DJANGO_ENV=test -e DEBUG=False todo-app python manage.py check
